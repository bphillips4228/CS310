<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Jython 2.7.0 on java1.8.0_71)" generated="20160316 11:58:09.445">
<suite source="C:\Users\Owner\Desktop\CS310\termProject\acceptance\ParserFeatureAcceptanceTest.txt" name="ParserFeatureAcceptanceTest" id="s1">
<test name="Test Volume Calculator Normal Function" id="s1-t1">
<kw library="ParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>5</arg>
<arg>2</arg>
</arguments>
<status endtime="20160316 11:58:10.630" starttime="20160316 11:58:10.615" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160316 11:58:10.662">${length} = 7</msg>
<status endtime="20160316 11:58:10.662" starttime="20160316 11:58:10.646" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20160316 11:58:10.677" starttime="20160316 11:58:10.662" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:10.677">${width} = 5</msg>
<status endtime="20160316 11:58:10.677" starttime="20160316 11:58:10.677" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>5</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20160316 11:58:10.693" starttime="20160316 11:58:10.693" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:10.724">${height} = 2</msg>
<status endtime="20160316 11:58:10.724" starttime="20160316 11:58:10.724" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20160316 11:58:10.740" starttime="20160316 11:58:10.740" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:10.755">${output} = 70.0</msg>
<status endtime="20160316 11:58:10.755" starttime="20160316 11:58:10.740" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>70.0</arg>
</arguments>
<status endtime="20160316 11:58:10.786" starttime="20160316 11:58:10.786" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:10.818" starttime="20160316 11:58:10.599" status="PASS"></status>
</test>
<test name="Test Unrecognized Argument" id="s1-t2">
<kw library="ParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>5</arg>
<arg>2</arg>
<arg>43</arg>
</arguments>
<status endtime="20160316 11:58:10.849" starttime="20160316 11:58:10.833" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:10.849">${output} = usage: java VolumeCalculator length width height
VolumeCalcultor.java: error: unrecognized arguments: 43</msg>
<status endtime="20160316 11:58:10.864" starttime="20160316 11:58:10.849" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>${expected}</arg>
</arguments>
<status endtime="20160316 11:58:10.880" starttime="20160316 11:58:10.864" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:10.880" starttime="20160316 11:58:10.818" status="PASS"></status>
</test>
<test name="Test Absurd Program Normal Function" id="s1-t3">
<kw library="ParserKeywords" name="Start Absurd Program With Arguments">
<arguments>
<arg>dog</arg>
<arg>2</arg>
<arg>true</arg>
<arg>3.5</arg>
</arguments>
<status endtime="20160316 11:58:10.927" starttime="20160316 11:58:10.911" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Pet">
<assign>
<var>${pet}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:10.958">${pet} = dog</msg>
<status endtime="20160316 11:58:10.958" starttime="20160316 11:58:10.942" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>dog</arg>
<arg>${pet}</arg>
</arguments>
<status endtime="20160316 11:58:10.974" starttime="20160316 11:58:10.958" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Number">
<assign>
<var>${number}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:10.974">${number} = 2</msg>
<status endtime="20160316 11:58:10.989" starttime="20160316 11:58:10.974" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${number}</arg>
</arguments>
<status endtime="20160316 11:58:11.005" starttime="20160316 11:58:10.989" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Rainy">
<assign>
<var>${rainy}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.020">${rainy} = true</msg>
<status endtime="20160316 11:58:11.036" starttime="20160316 11:58:11.020" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>true</arg>
<arg>${rainy}</arg>
</arguments>
<status endtime="20160316 11:58:11.036" starttime="20160316 11:58:11.036" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Bathrooms">
<assign>
<var>${bathrooms}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.052">${bathrooms} = 3.5</msg>
<status endtime="20160316 11:58:11.052" starttime="20160316 11:58:11.036" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3.5</arg>
<arg>${bathrooms}</arg>
</arguments>
<status endtime="20160316 11:58:11.067" starttime="20160316 11:58:11.052" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:11.067" starttime="20160316 11:58:10.880" status="PASS"></status>
</test>
<test name="Test Usage Message" id="s1-t4">
<kw library="ParserKeywords" name="Start Program With Arguments">
<arguments>
<arg>-h</arg>
</arguments>
<status endtime="20160316 11:58:11.083" starttime="20160316 11:58:11.083" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.098">${output} = usage: java VolumeCalculator length width height
Calcuate the volume of a box.
positional arguments:
length the length of the box (float)
width the width of the box(float)
height the height of the box...</msg>
<status endtime="20160316 11:58:11.098" starttime="20160316 11:58:11.083" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expected1}</arg>
<arg>${output}</arg>
</arguments>
<status endtime="20160316 11:58:11.114" starttime="20160316 11:58:11.098" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:11.114" starttime="20160316 11:58:11.067" status="PASS"></status>
</test>
<test name="Test Incorrect Datatype Message" id="s1-t5">
<kw library="ParserKeywords" name="Start Program With Arguments">
<arguments>
<arg>7</arg>
<arg>something</arg>
<arg>2</arg>
</arguments>
<status endtime="20160316 11:58:11.161" starttime="20160316 11:58:11.130" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.161">${output} = usage: java VolumeCalculator length width height
VolumeCalcultor.java: error: argument width: invalid float value: something</msg>
<status endtime="20160316 11:58:11.161" starttime="20160316 11:58:11.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>${expected2}</arg>
</arguments>
<status endtime="20160316 11:58:11.208" starttime="20160316 11:58:11.176" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:11.208" starttime="20160316 11:58:11.130" status="PASS"></status>
</test>
<test name="Test Named Argument Defaults" id="s1-t6">
<kw library="ParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
</arguments>
<status endtime="20160316 11:58:11.239" starttime="20160316 11:58:11.223" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160316 11:58:11.254">${length} = 7</msg>
<status endtime="20160316 11:58:11.254" starttime="20160316 11:58:11.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20160316 11:58:11.254" starttime="20160316 11:58:11.254" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.270">${width} = 3</msg>
<status endtime="20160316 11:58:11.270" starttime="20160316 11:58:11.254" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20160316 11:58:11.286" starttime="20160316 11:58:11.286" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.301">${height} = 2</msg>
<status endtime="20160316 11:58:11.301" starttime="20160316 11:58:11.286" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20160316 11:58:11.317" starttime="20160316 11:58:11.301" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Type">
<assign>
<var>${type}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.332">${type} = box</msg>
<status endtime="20160316 11:58:11.332" starttime="20160316 11:58:11.317" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>box</arg>
<arg>${type}</arg>
</arguments>
<status endtime="20160316 11:58:11.332" starttime="20160316 11:58:11.332" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Digits">
<assign>
<var>${digits}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.348">${digits} = 4</msg>
<status endtime="20160316 11:58:11.348" starttime="20160316 11:58:11.332" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>4</arg>
<arg>${digits}</arg>
</arguments>
<status endtime="20160316 11:58:11.348" starttime="20160316 11:58:11.348" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:11.364" starttime="20160316 11:58:11.223" status="PASS"></status>
</test>
<test name="Test Named Argument Single" id="s1-t7">
<kw library="ParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
<arg>--type</arg>
<arg>ellipsoid</arg>
</arguments>
<status endtime="20160316 11:58:11.379" starttime="20160316 11:58:11.364" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.379">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160316 11:58:11.395">${length} = 7</msg>
<status endtime="20160316 11:58:11.395" starttime="20160316 11:58:11.379" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20160316 11:58:11.410" starttime="20160316 11:58:11.410" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.442">${width} = 3</msg>
<status endtime="20160316 11:58:11.442" starttime="20160316 11:58:11.426" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20160316 11:58:11.457" starttime="20160316 11:58:11.442" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.473">${height} = 2</msg>
<status endtime="20160316 11:58:11.473" starttime="20160316 11:58:11.457" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20160316 11:58:11.488" starttime="20160316 11:58:11.473" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Type">
<assign>
<var>${type}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.488">${type} = ellipsoid</msg>
<status endtime="20160316 11:58:11.488" starttime="20160316 11:58:11.488" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>ellipsoid</arg>
<arg>${type}</arg>
</arguments>
<status endtime="20160316 11:58:11.504" starttime="20160316 11:58:11.488" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Digits">
<assign>
<var>${digits}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.504">${digits} = 4</msg>
<status endtime="20160316 11:58:11.504" starttime="20160316 11:58:11.504" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>4</arg>
<arg>${digits}</arg>
</arguments>
<status endtime="20160316 11:58:11.535" starttime="20160316 11:58:11.520" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:11.535" starttime="20160316 11:58:11.364" status="PASS"></status>
</test>
<test name="Test Named Argument Multiple" id="s1-t8">
<kw library="ParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
<arg>--type</arg>
<arg>ellipsoid</arg>
<arg>--digits</arg>
<arg>1</arg>
</arguments>
<status endtime="20160316 11:58:11.551" starttime="20160316 11:58:11.551" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.379">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.551">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160316 11:58:11.582">${length} = 7</msg>
<status endtime="20160316 11:58:11.582" starttime="20160316 11:58:11.566" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20160316 11:58:11.582" starttime="20160316 11:58:11.582" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.598">${width} = 3</msg>
<status endtime="20160316 11:58:11.598" starttime="20160316 11:58:11.598" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20160316 11:58:11.613" starttime="20160316 11:58:11.598" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.613">${height} = 2</msg>
<status endtime="20160316 11:58:11.613" starttime="20160316 11:58:11.613" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20160316 11:58:11.629" starttime="20160316 11:58:11.613" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Type">
<assign>
<var>${type}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.644">${type} = ellipsoid</msg>
<status endtime="20160316 11:58:11.644" starttime="20160316 11:58:11.629" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>ellipsoid</arg>
<arg>${type}</arg>
</arguments>
<status endtime="20160316 11:58:11.660" starttime="20160316 11:58:11.644" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Digits">
<assign>
<var>${digits}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.660">${digits} = 1</msg>
<status endtime="20160316 11:58:11.660" starttime="20160316 11:58:11.660" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>1</arg>
<arg>${digits}</arg>
</arguments>
<status endtime="20160316 11:58:11.676" starttime="20160316 11:58:11.660" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:11.676" starttime="20160316 11:58:11.535" status="PASS"></status>
</test>
<test name="Test Named Argument Anywhere" id="s1-t9">
<kw library="ParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>--type</arg>
<arg>ellipsoid</arg>
<arg>7</arg>
<arg>3</arg>
<arg>--digits</arg>
<arg>1</arg>
<arg>2</arg>
</arguments>
<status endtime="20160316 11:58:11.691" starttime="20160316 11:58:11.691" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.379">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.551">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.707">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160316 11:58:11.722">${length} = 7</msg>
<status endtime="20160316 11:58:11.722" starttime="20160316 11:58:11.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20160316 11:58:11.722" starttime="20160316 11:58:11.722" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.738">${width} = 3</msg>
<status endtime="20160316 11:58:11.738" starttime="20160316 11:58:11.738" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20160316 11:58:11.785" starttime="20160316 11:58:11.754" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.785">${height} = 2</msg>
<status endtime="20160316 11:58:11.785" starttime="20160316 11:58:11.785" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20160316 11:58:11.800" starttime="20160316 11:58:11.785" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Type">
<assign>
<var>${type}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.800">${type} = ellipsoid</msg>
<status endtime="20160316 11:58:11.800" starttime="20160316 11:58:11.800" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>ellipsoid</arg>
<arg>${type}</arg>
</arguments>
<status endtime="20160316 11:58:11.832" starttime="20160316 11:58:11.816" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Digits">
<assign>
<var>${digits}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.832">${digits} = 1</msg>
<status endtime="20160316 11:58:11.832" starttime="20160316 11:58:11.832" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>1</arg>
<arg>${digits}</arg>
</arguments>
<status endtime="20160316 11:58:11.847" starttime="20160316 11:58:11.832" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:11.847" starttime="20160316 11:58:11.676" status="PASS"></status>
</test>
<test name="Test Help Flag" id="s1-t10">
<kw library="ParserKeywords" name="Start Program With Arguments">
<arguments>
<arg>7</arg>
<arg>--help</arg>
<arg>3</arg>
<arg>2</arg>
</arguments>
<status endtime="20160316 11:58:11.863" starttime="20160316 11:58:11.863" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.878">${output} = usage: java VolumeCalculator length width height
Calcuate the volume of a box.
positional arguments:
length the length of the box (float)
width the width of the box(float)
height the height of the box...</msg>
<status endtime="20160316 11:58:11.878" starttime="20160316 11:58:11.863" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expected1}</arg>
<arg>${output}</arg>
</arguments>
<status endtime="20160316 11:58:11.878" starttime="20160316 11:58:11.878" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:11.878" starttime="20160316 11:58:11.847" status="PASS"></status>
</test>
<test name="Test Short Form Arguments" id="s1-t11">
<kw library="ParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>-t</arg>
<arg>ellipsoid</arg>
<arg>7</arg>
<arg>3</arg>
<arg>-d</arg>
<arg>1</arg>
<arg>2</arg>
</arguments>
<status endtime="20160316 11:58:11.894" starttime="20160316 11:58:11.894" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.379">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.551">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.707">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.910">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160316 11:58:11.941">${length} = 7</msg>
<status endtime="20160316 11:58:11.941" starttime="20160316 11:58:11.910" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20160316 11:58:11.956" starttime="20160316 11:58:11.941" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.956">${width} = 3</msg>
<status endtime="20160316 11:58:11.956" starttime="20160316 11:58:11.956" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20160316 11:58:11.972" starttime="20160316 11:58:11.972" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.972">${height} = 2</msg>
<status endtime="20160316 11:58:11.972" starttime="20160316 11:58:11.972" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20160316 11:58:11.988" starttime="20160316 11:58:11.988" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Type">
<assign>
<var>${type}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:11.988">${type} = ellipsoid</msg>
<status endtime="20160316 11:58:12.003" starttime="20160316 11:58:11.988" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>ellipsoid</arg>
<arg>${type}</arg>
</arguments>
<status endtime="20160316 11:58:12.019" starttime="20160316 11:58:12.003" status="PASS"></status>
</kw>
<kw library="ParserKeywords" name="Get Digits">
<assign>
<var>${digits}</var>
</assign>
<msg level="INFO" timestamp="20160316 11:58:12.019">${digits} = 1</msg>
<status endtime="20160316 11:58:12.019" starttime="20160316 11:58:12.019" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>1</arg>
<arg>${digits}</arg>
</arguments>
<status endtime="20160316 11:58:12.034" starttime="20160316 11:58:12.034" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160316 11:58:12.034" starttime="20160316 11:58:11.894" status="PASS"></status>
</test>
<status endtime="20160316 11:58:12.050" starttime="20160316 11:58:09.460" status="PASS"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="0">Critical Tests</stat>
<stat pass="11" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" name="ParserFeatureAcceptanceTest" id="s1">ParserFeatureAcceptanceTest</stat>
</suite>
</statistics>
<errors>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.379">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.379">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.551">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.379">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.551">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.707">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:10.646">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.239">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.379">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.551">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.707">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160316 11:58:11.910">Keyword 'Get Length' found both from a custom test library 'ParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
</errors>
</robot>
